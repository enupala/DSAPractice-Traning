1.In Employees_Projects table some rows reference employees who no longer exist in the employees table. Remove these orphaned rows?

Ans: delete from employees_projects where employee_id not in( select employee_id from employees);
 
2.Detect Salary gaps?
hint: you want to compare the average salary between departments.

Ans: select name,d.id,avg(salary) as avg_Sal,max(salary)-min(salary) as salary_gap  from employees e
join departments d on e.department_id=d.id group by e.department_id;

3.Employees working on more than 1 project?

Ans:select employee_id,count(project_id) from employees_projects group by employee_id having count(project_id)>1; 


4.Remove combination of cust_id and order_date duplicate rows in order table?

Ans:
use testschema;
CREATE TABLE orders (
    order_id INT PRIMARY KEY,      -- Primary key for the table
    cust_id INT NOT NULL,          -- Customer ID associated with the order
    order_date DATE NOT NULL       -- Date of the order
);
INSERT INTO orders (order_id, cust_id, order_date) VALUES 
(1, 101, '2024-01-10'),
(2, 102, '2024-01-11'),
(3, 101, '2024-01-12'),
(4, 103, '2024-01-13'),
(5,101,'2024-01-10'),
(6,101,'2024-01-10');
create temporary table temp_table as select min(order_id) as order_id from orders group by cust_id,order_date;
select * from temp_table;
drop table temp_table;
select * from orders;

delete from orders where order_id not in (select order_id from temp_table);
 

5.Remove combination of project_id,employee_id duplicate rows in employees_projects table?

Ans:
CREATE TABLE employees_projects (
    employee_id INT,
    project_id INT
);
INSERT INTO employees_projects (employee_id, project_id)
VALUES 
    (1, 101),  -- First project for employee 1
    (1, 101),  -- Duplicate project for employee 1
    (2, 102),  -- First project for employee 2
    (2, 102),  -- Duplicate project for employee 2
    (3, 103),  -- First project for employee 3
    (3, 103),  -- Duplicate project for employee 3
    (4, 104),  -- First project for employee 4
    (5, 105); 
    select * from employees_projects;
    create temporary table temp as select project_id,employee_id ,row_number()
    over (partition by project_id,employee_id  order by employee_id) as row_num
    from employees_projects;
    select * from temp;
    delete from employees_projects where (project_id,employee_id) in (
    select project_id,employee_id from temp where row_num>1);
 
 